name: Deploy to AWS Lambda

on:
  push:
    branches: [backend]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: zip lamnda_function and shopee_utils
        run: |
          mkdir lambda-package
          cp lambda_function.py lambda-package/
          cp shopee_utils.py lambda-package/
          cd lambda-package
          zip -r ../code.zip .

      - name: get current alias version
        id: get_current_version
        run: |
          CURRENT_VERSION=$(aws lambda get-alias \
            --function-name shopee-api-dev-summary \
            --name live \
            --query FunctionVersion \
            --output text)
          echo "Current alias version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

      - name: deploy Lambda and save new version
        id: deploy_lambda
        run: |
          VERSION=$(aws lambda update-function-code \
            --function-name shopee-api-dev-summary \
            --zip-file fileb://code.zip \
            --publish \
            --query Version \
            --output text)
          echo "Lambda published version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

      - name: update live to new version number
        id: update_alias
        run: |
          aws lambda update-alias \
            --function-name shopee-api-dev-summary \
            --name live \
            --function-version ${{ steps.deploy_lambda.outputs.version }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

      - name: check if lambda works
        id: validation
        run: |
          API_URL="https://diqe9uc0ki.execute-api.ap-southeast-1.amazonaws.com/dev/summary"
          HTTP_STATUS=$(curl -s -o response.txt -w "%{http_code}" "$API_URL")

          echo "API Response:"
          cat response.txt
          echo "Status Code: $HTTP_STATUS"

          if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "pass"
            exit 0
          else
            echo "fail"
            exit 1
          fi
        continue-on-error: true

      - name: rollback if API doesnt get a response
        if: steps.validation.outcome == 'failure'
        run: |
          echo "Rolling back to version ${{ steps.get_current_version.outputs.current_version }}"
          aws lambda update-alias \
            --function-name shopee-api-dev-summary \
            --name live \
            --function-version ${{ steps.get_current_version.outputs.current_version }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

      - name: print final live version number
        run: |
          aws lambda get-alias \
            --function-name shopee-api-dev-summary \
            --name live
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

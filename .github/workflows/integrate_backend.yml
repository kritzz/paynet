name: Deploy to AWS Lambda

on:
  push:
    branches: [backend]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          mkdir python
          pip install -r requirements.txt --target python/

      - name: Package Lambda function with dependencies
        run: |
          mkdir lambda-package
          cp lambda_function.py shopee_utils.py lambda-package/
          cd lambda-package
          zip -r ../code.zip .

      - name: Get current alias version
        id: get_current_version
        run: |
          CURRENT_VERSION=$(aws lambda get-alias \
            --function-name shopee-api-dev-summary \
            --name live \
            --query FunctionVersion \
            --output text)
          echo "Current alias version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

      - name: Deploy Lambda and publish new version
        id: deploy_lambda
        run: |
          VERSION=$(aws lambda update-function-code \
            --function-name shopee-api-dev-summary \
            --zip-file fileb://code.zip \
            --publish \
            --query Version \
            --output text)
          echo "Lambda published version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

      - name: Update alias 'live' to new version
        id: update_alias
        run: |
          aws lambda update-alias \
            --function-name shopee-api-dev-summary \
            --name live \
            --function-version ${{ steps.deploy_lambda.outputs.version }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

      - name: Validate Lambda via API Gateway
        id: validation
        continue-on-error: true
        run: |
          sleep 10 
          BASE_URL="https://ol2a8mfg1l.execute-api.ap-southeast-1.amazonaws.com/dev"
          declare -A endpoints=(
            ["/summary"]="GET"
            ["/product"]="POST"
            ["/sales-trend"]="GET"
            ["/seller"]="GET"
            ["/top-category"]="GET"
            ["/top-products"]="GET"
          )

          overall_status=0

          for endpoint in "${!endpoints[@]}"; do
            method=${endpoints[$endpoint]}
            echo "Testing $method $BASE_URL$endpoint"

            if [ "$method" = "POST" ]; then
              HTTP_STATUS=$(curl -s -o response.txt -w "%{http_code}" -X POST -H "Content-Type: application/json" -d '{}' "$BASE_URL$endpoint")
            else
              HTTP_STATUS=$(curl -s -o response.txt -w "%{http_code}" -X "$method" "$BASE_URL$endpoint")
            fi

            echo "Response from $endpoint:"
            cat response.txt
            echo "Status Code: $HTTP_STATUS"

            if [ "$HTTP_STATUS" -ne 200 ]; then
              echo "Validation failed on $endpoint"
              overall_status=1
            else
              echo "Validation passed on $endpoint"
            fi
          done

          exit $overall_status
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1
      - name: Run tests with pytest
        id: pytest
        continue-on-error: true
        run: |
          pytest test_lambda_functions.py -v
      - name: Roll back alias to previous version if validation failed
        if: steps.pytest.outcome == 'failure' || steps.validation.outcome == 'failure'
        run: |
          echo "Rolling back to version ${{ steps.get_current_version.outputs.current_version }}"
          aws lambda update-alias \
            --function-name shopee-api-dev-summary \
            --name live \
            --function-version ${{ steps.get_current_version.outputs.current_version }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

      - name: Show final live alias version
        run: |
          aws lambda get-alias \
            --function-name shopee-api-dev-summary \
            --name live
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-1

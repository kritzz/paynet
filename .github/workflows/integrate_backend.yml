name: Test and Deploy Lambda

on:
  push:
    branches:
      - main
    paths:
      - "lambda_function.py"
      - "shopee_utils.py"
      - "requirements.txt"

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install awscli aws-sam-cli

      - name: Create deployment package
        run: |
          # Create a temporary directory for the package
          mkdir -p package

          # Install dependencies into the package directory
          pip install -r requirements.txt -t package/

          # Copy the Lambda function files
          cp lambda_function.py package/
          cp shopee_utils.py package/

          # Create the deployment package
          cd package
          zip -r ../function.zip .
          cd ..

      - name: Test Lambda locally
        run: |
          # Test summary endpoint
          sam local invoke shopee-api-dev-summary \
            --event test-events/summary.json \
            --docker-network host \
            --skip-pull-image

          # Test seller endpoint
          sam local invoke shopee-api-dev-summary \
            --event test-events/seller.json \
            --docker-network host \
            --skip-pull-image

          # Test sales-trend endpoint
          sam local invoke shopee-api-dev-summary \
            --event test-events/sales-trend.json \
            --docker-network host \
            --skip-pull-image

      - name: Configure AWS credentials
        if: success()
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to Lambda
        if: success()
        run: |
          VERSION=$(aws lambda update-function-code \
            --function-name shopee-api-dev-summary \
            --zip-file fileb://function.zip \
            --publish \
            --query Version \
            --output text)
          echo "Lambda published version: $VERSION"
